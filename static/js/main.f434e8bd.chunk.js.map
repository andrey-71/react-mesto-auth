{"version":3,"sources":["contexts/CurrentUserContext.js","components/ProtectedRoute.js","images/header-logo.svg","components/Header.js","components/AuthForm.js","components/Login.js","components/Register.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/DeleteCardPopup.js","components/ImagePopup.js","components/InfoTooltip.js","utils/auth.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["CurrentUserContext","React","createContext","ProtectedRoute","props","isLogin","children","to","Header","className","isLogged","id","type","src","logo","alt","htmlFor","emailUser","link","onClick","onSignOut","textAuth","AuthForm","isForm","name","onSubmit","placeholder","required","onChange","onEmail","value","isEmail","onPassword","isPassword","textButton","Login","useState","email","setEmail","password","setPassword","evt","target","preventDefault","onLogin","Register","onRegister","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","like","cardLikeButtonClassName","onCardClick","onCardDelete","onCardLike","Main","onEditAvatar","avatar","about","onEditProfile","onAddPlace","cards","map","length","Footer","PopupWithForm","isOpen","onMouseDown","onPopupClick","title","isLoading","onClose","EditProfilePopup","setName","description","setDescription","useEffect","onUpdateUser","minLength","maxLength","EditAvatarPopup","avatarLink","useRef","current","onUpdateAvatar","ref","AddPlacePopup","setLink","DeleteCardPopup","onDeleteCard","ImagePopup","InfoTooltip","status","auth","serverAuthUrl","this","_serverAuthUrl","data","fetch","method","headers","body","JSON","stringify","then","res","_handleResult","token","ok","json","Promise","reject","statusText","api","options","_serverUrl","serverUrl","_receiveRequestHeaders","receiveRequestHeaders","_sendRequestHeaders","sendRequestHeaders","all","_getUserInfo","_getInitialCards","authorization","App","navigate","useNavigate","setCurrentUser","setCards","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isDeleteCardPopupOpen","setIsDeleteCardPopupOpen","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","selectedCard","setSelectedCard","setIsLoading","isRegistered","setIsRegistered","setIsLogged","isEmailUser","setIsEmailUser","userToken","localStorage","getItem","checkToken","catch","err","console","log","getAppInfo","getUserInfo","getInitialCards","closeAllPopups","handleEscClick","key","document","addEventListener","removeEventListener","handleOverlayClick","classList","contains","Provider","path","element","userData","authorize","setItem","register","setTimeout","removeItem","c","setLikeCard","newCard","item","setUserInfo","finally","setUserAvatar","setNewCard","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.f434e8bd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport {Navigate} from 'react-router-dom';\r\n\r\nconst ProtectedRoute = (props) => {\r\n  {/* Доступ на главную страницу только для авторизованных пользователей */\r\n  }\r\n  return props.isLogin ? props.children : <Navigate to='/sign-in'/>}\r\n\r\nexport default ProtectedRoute;","export default __webpack_public_path__ + \"static/media/header-logo.5f3664ca.svg\";","import {Link} from 'react-router-dom';\r\nimport logo from '../images/header-logo.svg'\r\n\r\n\r\nfunction Header(props) {\r\n\r\n  return (\r\n    <header className='header container__header'>\r\n      {props.isLogged ?\r\n        <div className='header__content header__content_type_login'>\r\n          <input id='header__menu-toggle' className='header__menu-toggle' type='checkbox'/>\r\n          <div className='header__logo-container'>\r\n            <img\r\n              className='header__logo'\r\n              src={logo}\r\n              alt='Логотип Место'\r\n            />\r\n            <label className='header__menu' htmlFor='header__menu-toggle'>\r\n              <span className='header__menu-item'></span>\r\n            </label>\r\n          </div>\r\n          <div className='header__user'>\r\n            <p className='header__user-email'>{props.emailUser}</p>\r\n            <Link\r\n              to={props.link}\r\n              className='header__user-signout'\r\n              onClick={props.onSignOut}\r\n            >\r\n              {props.textAuth}\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        :\r\n        <div className='header__content header__content_type_logout'>\r\n          <img\r\n            className='header__logo'\r\n            src={logo}\r\n            alt='Логотип Место'\r\n          />\r\n          <Link\r\n            to={props.link}\r\n            className='header__link'\r\n            onClick={props.onSignOut}\r\n          >\r\n            {props.textAuth}\r\n          </Link>\r\n        </div>\r\n      }\r\n\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\n\r\nfunction AuthForm(props) {\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2 className='auth__title'>Вход</h2>\r\n      <form\r\n        className={`auth__form auth__form_type_${props.isForm}`}\r\n        name={`form-${props.isForm}`}\r\n        onSubmit={props.onSubmit}\r\n      >\r\n        <input\r\n          className='auth__input'\r\n          name='emailUser'\r\n          type='email'\r\n          placeholder='Email'\r\n          required\r\n          onChange={props.onEmail}\r\n          value={props.isEmail}\r\n        />\r\n        <input\r\n          className='auth__input'\r\n          name='passwordUser'\r\n          type='password'\r\n          placeholder='Пароль'\r\n          required\r\n          onChange={props.onPassword}\r\n          value={props.isPassword}\r\n        />\r\n        <button className='auth__submit-button' type='submit'>{props.textButton}</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AuthForm;","import React from 'react';\r\nimport AuthForm from './AuthForm';\r\n\r\nfunction Login(props) {\r\n  // Стейты инпутов\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  // Обработчики изменения состояния инпутов\r\n  function handleChangeEmail(evt) {\r\n    setEmail(evt.target.value);\r\n  }\r\n\r\n  function handleChangePassword(evt) {\r\n    setPassword(evt.target.value);\r\n  }\r\n\r\n  // Обработчик формы\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onLogin({email, password});\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='auth auth_type_login container__auth'>\r\n      <AuthForm\r\n        isForm={'login'}\r\n        isEmail={email}\r\n        isPassword={password}\r\n        onEmail={handleChangeEmail}\r\n        onPassword={handleChangePassword}\r\n        onSubmit={handleSubmit}\r\n        textButton={'Войти'}\r\n      />\r\n\r\n      <div className='auth__sign-up'></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AuthForm from './AuthForm';\r\n\r\n\r\nfunction Register(props) {\r\n\r\n  // Стейты инпутов\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  // Обработчики изменения состояния инпутов\r\n  function handleChangeEmail(evt) {\r\n    setEmail(evt.target.value);\r\n  }\r\n\r\n  function handleChangePassword(evt) {\r\n    setPassword(evt.target.value);\r\n  }\r\n\r\n  // Обработчик формы\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onRegister({email, password});\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='auth auth_type_registr container__auth'>\r\n      <AuthForm\r\n        isForm={'registr'}\r\n        isEmail={email}\r\n        isPassword={password}\r\n        onEmail={handleChangeEmail}\r\n        onPassword={handleChangePassword}\r\n        onSubmit={handleSubmit}\r\n        textButton={'Зарегистрироваться'}\r\n      />\r\n      <div className='auth__sign-in'>\r\n        <p className='auth__registration-request-text'>Уже зарегистрированы?</p>\r\n        <Link to='/sign-in' className='auth__login-link'>Войти</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n  // Подписка на контекст данных пользователя\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // Отрисовка кнопки удаления карточки, если карточка создана пользователем\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n  const cardDeleteButtonClassName = (\r\n    `card__delete-button ${isOwn ? 'card__delete-button_visible' : 'card__delete-button_hidden'}`\r\n  );\r\n  // Отрисовка лайка на карточке, поставленного пользователем\r\n  const isLiked = props.card.likes.some(like => like._id === currentUser._id);\r\n  const cardLikeButtonClassName = `card__like${isLiked ? ' card__like_active' : ''}`;\r\n\r\n\r\n  return (\r\n    <figure className='card'>\r\n      <img\r\n        src={props.link}\r\n        alt={props.name}\r\n        className='card__image'\r\n        onClick={\r\n          function handleClick() {\r\n            props.onCardClick(props.card)\r\n          }\r\n        }\r\n      />\r\n      <button\r\n        className={cardDeleteButtonClassName}\r\n        type='button'\r\n        onClick={\r\n          function handleDelete() {\r\n            props.onCardDelete(props.card);\r\n          }\r\n        }\r\n      />\r\n      <figcaption className='card__info'>\r\n        <h2 className='card__caption'>{props.name}</h2>\r\n        <div className='card__like-section'>\r\n          <button\r\n            className={cardLikeButtonClassName}\r\n            type='button'\r\n            onClick={\r\n              function handleLikeClick() {\r\n                props.onCardLike(props.card)\r\n              }\r\n            }\r\n          />\r\n          <p className='card__like-number'>{props.likes}</p>\r\n        </div>\r\n      </figcaption>\r\n    </figure>\r\n  )\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\nimport Card from './Card';\r\n\r\n\r\nfunction Main(props) {\r\n  // Подписка на контекст данных пользователя\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n\r\n  return (\r\n    <main className='content container__content'>\r\n      {/* Profile */}\r\n      <section className='profile'>\r\n        <div className='profile__user-data'>\r\n          <button className='profile__edit-avatar' type='button' onClick={props.onEditAvatar}>\r\n            <img\r\n              src={currentUser.avatar}\r\n              alt='Фотография пользователя'\r\n              className='profile__avatar'\r\n            />\r\n          </button>\r\n          <div className='profile__info'>\r\n            <h1 className='profile__name'>{currentUser.name}</h1>\r\n            <p className='profile__job'>{currentUser.about}</p>\r\n            <button\r\n              className='profile__edit-button'\r\n              type='button'\r\n              onClick={props.onEditProfile}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button\r\n          className='profile__add-button'\r\n          type='button'\r\n          onClick={props.onAddPlace}\r\n        />\r\n      </section>\r\n      {/* Photo gallery */}\r\n      <section className='card-gallery content__card-gallery'>\r\n        {props.cards.map((card) => (\r\n          <Card\r\n            card={card}\r\n            name={card.name}\r\n            link={card.link}\r\n            likes={card.likes.length}\r\n            onCardClick={props.onCardClick}\r\n            onCardLike={props.onCardLike}\r\n            onCardDelete={props.onCardDelete}\r\n            key={card._id}\r\n          />\r\n        ))}\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className='footer container__footer'>\r\n      <h2 className='footer__copyright'>&copy; 2021 Mesto Russia</h2>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n\r\n  return (\r\n    <div className={`popup ${props.isOpen ? 'popup_active' : ''} popup_type_${props.name}`}\r\n         onMouseDown={props.onPopupClick}\r\n    >\r\n      <div className='popup__container'>\r\n        <h2 className='popup__title'>{props.title}</h2>\r\n        <form\r\n          className={`popup__form popup__form_type_${props.name}`}\r\n          name={`form-${props.name}`}\r\n          onSubmit={props.onSubmit}\r\n        >\r\n          {props.children}\r\n          <button className='popup__submit-button' type='submit'>\r\n            {props.isLoading ? 'Сохранение...' : props.textButton}\r\n          </button>\r\n        </form>\r\n        <button\r\n          className='popup__close'\r\n          type='button'\r\n          onClick={props.onClose}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditProfilePopup(props) {\r\n  // Подписка на контекст данных пользователя\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // Стейт-переменные:\r\n  // - инпут с именем пользователя\r\n  const [name, setName] = React.useState('');\r\n  // - инпут с информацией о пользователе\r\n  const [description, setDescription] = React.useState('');\r\n\r\n  // Запись и очистка данных пользователя в инпуты при открытии и закрытии попапа соответственно\r\n  React.useEffect(() => {\r\n    if (props.isOpen) {\r\n      setName(currentUser.name);\r\n      setDescription(currentUser.about);\r\n    } else {\r\n      setName('');\r\n      setDescription('');\r\n    }\r\n  }, [props.isOpen, currentUser]);\r\n\r\n  // Обработчики изменения инпутов\r\n  function handleChangeName(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleChangeDescription(evt) {\r\n    setDescription(evt.target.value);\r\n  }\r\n\r\n  // Обработчик формы\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onUpdateUser({\r\n      name,\r\n      about: description\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='edit-profile'\r\n      title='Редактировать профиль'\r\n      textButton='Сохранить'\r\n      isOpen={props.isOpen}\r\n      isLoading={props.isLoading}\r\n      onSubmit={handleSubmit}\r\n      onPopupClick={props.onPopupClick}\r\n      onClose={props.onClose}\r\n    >\r\n      <label className='popup__input-element'>\r\n        <input\r\n          type='text'\r\n          placeholder='Ваше имя'\r\n          className='popup__input popup__input_type_profile-name'\r\n          id='input-profile-name'\r\n          name='nameUser'\r\n          value={name}\r\n          onChange={handleChangeName}\r\n          required\r\n          minLength={2}\r\n          maxLength={40}\r\n        />\r\n        <span className='popup__input-error' id='input-profile-name-error'/>\r\n      </label>\r\n      <label className='popup__input-element'>\r\n        <input\r\n          type='text'\r\n          placeholder='Чем занимаетесь'\r\n          className='popup__input popup__input_type_profile-job'\r\n          id='input-profile-job'\r\n          name='infoUser'\r\n          value={description}\r\n          onChange={handleChangeDescription}\r\n          required\r\n          minLength={2}\r\n          maxLength={200}\r\n        />\r\n        <span className='popup__input-error' id='input-profile-job-error'/>\r\n      </label>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n  // Реф ссылки на картинку\r\n  const avatarLink = React.useRef('');\r\n\r\n  // Обработчик формы\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onUpdateAvatar({\r\n      avatar: avatarLink.current.value\r\n    });\r\n  }\r\n\r\n  // Очистка поля ввода при закрытии попапа\r\n  React.useEffect(() => {\r\n    if (!props.isOpen) {\r\n      avatarLink.current.value = '';\r\n    }\r\n  }, [props.isOpen]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='edit-avatar'\r\n      title='Обновить аватар'\r\n      textButton='Сохранить'\r\n      isOpen={props.isOpen}\r\n      isLoading={props.isLoading}\r\n      onSubmit={handleSubmit}\r\n      onPopupClick={props.onPopupClick}\r\n      onClose={props.onClose}\r\n    >\r\n      <label className='popup__input-element'>\r\n        <input\r\n          type='url'\r\n          placeholder='Ссылка на картинку'\r\n          className='popup__input popup__input_type_avatar-link'\r\n          id='input-avatar-link'\r\n          name='avatarUser'\r\n          ref={avatarLink}\r\n          required\r\n        />\r\n        <span className='popup__input-error' id='input-avatar-link-error'/>\r\n      </label>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;","import {useState, useEffect} from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n  // Стейт-переменные:\r\n  // - инпут с подписью карточки\r\n  const [name, setName] = useState('');\r\n  // - инпут с ссылкой карточки\r\n  const [link, setLink] = useState('');\r\n\r\n  // Обработчики изменения инпутов\r\n  function handleChangeName(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleChangeLink(evt) {\r\n    setLink(evt.target.value);\r\n  }\r\n\r\n  // Обработчик формы\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onAddPlace({name, link});\r\n  }\r\n\r\n  // Очистка полей ввода при закрытии попапа\r\n  useEffect(() => {\r\n    if (!props.isOpen) {\r\n      setName('');\r\n      setLink('');\r\n    }\r\n  }, [props.isOpen]);\r\n\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='add-card'\r\n      title='Новое место'\r\n      textButton='Создать'\r\n      isOpen={props.isOpen}\r\n      isLoading={props.isLoading}\r\n      onSubmit={handleSubmit}\r\n      onPopupClick={props.onPopupClick}\r\n      onClose={props.onClose}\r\n    >\r\n      <label className='popup__input-element'>\r\n        <input\r\n          type='text'\r\n          placeholder='Название'\r\n          className='popup__input popup__input_type_card-name'\r\n          id='input-card-name'\r\n          name='name'\r\n          value={name}\r\n          onChange={handleChangeName}\r\n          required\r\n          minLength={2}\r\n          maxLength={30}\r\n        />\r\n        <span className='popup__input-error' id='input-card-name-error'/>\r\n      </label>\r\n      <label className='popup__input-element'>\r\n        <input\r\n          type='url'\r\n          placeholder='Ссылка на картинку'\r\n          className='popup__input popup__input_type_card-link'\r\n          id='input-card-link'\r\n          name='link'\r\n          value={link}\r\n          onChange={handleChangeLink}\r\n          required\r\n        />\r\n        <span className='popup__input-error' id='input-card-link-error'/>\r\n      </label>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction DeleteCardPopup(props) {\r\n  // Обработчик формы\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onDeleteCard(props.isOpen);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='delete-card'\r\n      title='Вы уверены?'\r\n      textButton='Да'\r\n      isOpen={props.isOpen}\r\n      isLoading={props.isLoading}\r\n      onSubmit={handleSubmit}\r\n      onPopupClick={props.onPopupClick}\r\n      onClose={props.onClose}\r\n    />\r\n  )\r\n}\r\n\r\nexport default DeleteCardPopup;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <div className={`popup ${props.card ? 'popup_active' : ''} popup_type_card-view`} onClick={props.onPopupClick}>\r\n      <div className='popup__card-view-container'>\r\n        <img src={props.card ? props.card.link : ''} alt={props.card ? props.card.name : ''}\r\n             className='popup__card-view-photo'/>\r\n        <p className='popup__card-view-caption'>{props.card ? props.card.name : ''}</p>\r\n        <button\r\n          className='popup__close'\r\n          type='button'\r\n          onClick={props.onClose}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\r\n\r\nfunction InfoTooltip(props) {\r\n\r\n  return (\r\n    <div className={`popup ${props.isOpen ? 'popup_active' : ''} popup_type_info-tooltip`}\r\n         onMouseDown={props.onPopupClick}\r\n    >\r\n      <div className='popup__container'>\r\n        <div\r\n          className={`popup__image popup__image_type_${props.status ? 'success' : 'error'}`}\r\n        ></div>\r\n        <p className='popup__status-text'>\r\n          {props.status\r\n            ?\r\n            'Вы успешно зарегистрировались!'\r\n            :\r\n            'Что-то пошло не так! Попробуйте ещё раз.'\r\n          }\r\n        </p>\r\n        <button\r\n          className='popup__close'\r\n          type='button'\r\n          onClick={props.onClose}\r\n        />\r\n      </div>\r\n\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default InfoTooltip;","class Auth {\r\n  constructor(serverAuthUrl) {\r\n    this._serverAuthUrl = serverAuthUrl;\r\n  }\r\n\r\n  // Регистрация пользователя\r\n  register(data) {\r\n    return fetch(`${this._serverAuthUrl}/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        email: data.email,\r\n        password: data.password\r\n      })\r\n    })\r\n      .then(res => this._handleResult(res))\r\n  }\r\n\r\n  // Авторизация пользователя\r\n  authorize(data) {\r\n    return fetch(`${this._serverAuthUrl}/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        email: data.email,\r\n        password: data.password\r\n      })\r\n    })\r\n      .then(res => this._handleResult(res))\r\n  }\r\n\r\n  // Проверка корректности токена, получение email пользователя\r\n  checkToken(token) {\r\n    return fetch(`${this._serverAuthUrl}/users/me`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    })\r\n      .then(res => this._handleResult(res))\r\n  }\r\n\r\n\r\n  // Обработчик результата запроса\r\n  _handleResult(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`\"${res.status} ${res.statusText}\"`);\r\n  }\r\n}\r\n\r\nconst auth = new Auth('https://auth.nomoreparties.co');\r\nexport default auth;","class Api {\r\n  constructor(options) {\r\n    this._serverUrl = options.serverUrl;\r\n    this._receiveRequestHeaders = options.receiveRequestHeaders\r\n    this._sendRequestHeaders = options.sendRequestHeaders;\r\n  }\r\n\r\n  // Общий запрос всех данных с сервера\r\n  getAppInfo() {\r\n    return Promise.all([this._getUserInfo(), this._getInitialCards()]);\r\n  }\r\n\r\n  // Получение данных пользователя\r\n  _getUserInfo() {\r\n    return fetch(`${this._serverUrl}/users/me`, {\r\n      headers: this._receiveRequestHeaders\r\n    })\r\n      .then(res => this._handleResult(res));\r\n  }\r\n\r\n  // Получение начальных карточек\r\n  _getInitialCards() {\r\n    return fetch(`${this._serverUrl}/cards`, {\r\n      headers: this._receiveRequestHeaders\r\n    })\r\n      .then(res => this._handleResult(res));\r\n  }\r\n\r\n  // Отправка данных пользователя\r\n  setUserInfo(data) {\r\n    return fetch(`${this._serverUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._sendRequestHeaders,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about\r\n      })\r\n    })\r\n      .then(res => this._handleResult(res));\r\n  }\r\n\r\n  // Отправка аватара пользователя\r\n  setUserAvatar(data) {\r\n    return fetch(`${this._serverUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._sendRequestHeaders,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar\r\n      })\r\n    })\r\n      .then(res => this._handleResult(res));\r\n  }\r\n\r\n  // Отправка новой карточки\r\n  setNewCard(data) {\r\n    return fetch(`${this._serverUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this._sendRequestHeaders,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    })\r\n      .then(res => this._handleResult(res));\r\n  }\r\n\r\n  // Удаление карточки\r\n  deleteCard(data) {\r\n    return fetch(`${this._serverUrl}/cards/${data._id}`, {\r\n      method: 'DELETE',\r\n      headers: this._receiveRequestHeaders\r\n    })\r\n      .then(res => this._handleResult(res));\r\n  }\r\n\r\n  // Установка/снятие лайка\r\n  setLikeCard(card, isLiked) {\r\n    if (isLiked) {\r\n      return fetch(`${this._serverUrl}/cards/likes/${card._id}`, {\r\n        method: 'PUT',\r\n        headers: this._sendRequestHeaders\r\n      })\r\n        .then(res => this._handleResult(res));\r\n    } else {\r\n      return fetch(`${this._serverUrl}/cards/likes/${card._id}`, {\r\n        method: 'DELETE',\r\n        headers: this._receiveRequestHeaders\r\n      })\r\n        .then(res => this._handleResult(res));\r\n    }\r\n  }\r\n\r\n\r\n  // Обработчик результата запроса\r\n  _handleResult(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`\"${res.status} ${res.statusText}\"`);\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  serverUrl: 'https://mesto.nomoreparties.co/v1/cohort-29',\r\n  receiveRequestHeaders: {\r\n    authorization: '47bf35c3-c8a1-495a-9dd2-8537c372d068'\r\n  },\r\n  sendRequestHeaders: {\r\n    authorization: '47bf35c3-c8a1-495a-9dd2-8537c372d068',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api;","import React from 'react';\r\nimport {Routes, Route, Navigate, useNavigate} from 'react-router-dom';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport Header from './Header';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport DeleteCardPopup from './DeleteCardPopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport auth from '../utils/auth';\r\nimport api from '../utils/api';\r\n\r\n\r\n\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  // Стейт-переменные:\r\n  // - данных пользователя\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  // - карточек\r\n  const [cards, setCards] = React.useState([]);\r\n  // - попапов\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = React.useState(false);\r\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState(null);\r\n  // - процесса загрузки данных на сервер\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  // - регистрации\r\n  const [isRegistered, setIsRegistered] = React.useState(false);\r\n  // - авторизации\r\n  const [isLogged, setIsLogged] = React.useState(false);\r\n  // - почты пользователя\r\n  const [isEmailUser, setIsEmailUser] = React.useState('');\r\n\r\n\r\n  // Авторизация пользователя\r\n  function handleLogin(userData) {\r\n    auth.authorize(userData)\r\n      .then((res) => {\r\n        if (res.token) {\r\n          localStorage.setItem('token', res.token);\r\n          setIsLogged(true);\r\n          setIsEmailUser(userData.email);\r\n          navigate('/');\r\n        }\r\n      })\r\n      .catch(err => console.log(`При авторизации произошла ошибка: ${err}`));\r\n  }\r\n\r\n  // Регистрация пользователя\r\n  function handleRegister(userData) {\r\n    auth.register(userData)\r\n      .then(() => {\r\n        setIsRegistered(true);\r\n        setIsInfoTooltipPopupOpen(true);\r\n        setTimeout(() => {\r\n          navigate('/sign-in');\r\n        }, 2000)\r\n      })\r\n      .catch((err) => {\r\n        setIsRegistered(false);\r\n        setIsInfoTooltipPopupOpen(true);\r\n        console.log(`При регистрации произошла ошибка: ${err}`);\r\n      })\r\n  }\r\n\r\n\r\n  // Проверка наличия сохраненных данных пользователя и автоматическая авторизация\r\n  React.useEffect(() => {\r\n    const userToken = localStorage.getItem('token');\r\n    if (userToken) {\r\n      auth.checkToken(userToken)\r\n        .then((res) => {\r\n          if (res) {\r\n            setIsLogged(true);\r\n            setIsEmailUser(res.data.email);\r\n          }\r\n        })\r\n        .catch(err => console.log(`Токен не найден: ${err}`))\r\n    }\r\n  }, [])\r\n\r\n  // Выход из учетной записи\r\n  function onSignOut() {\r\n    localStorage.removeItem('token');\r\n    setIsLogged(false);\r\n  }\r\n\r\n\r\n  // Получение карточек и данных пользователя, отрисовка на странице\r\n  React.useEffect(() => {\r\n    api.getAppInfo()\r\n      .then(([getUserInfo, getInitialCards]) => {\r\n        setCurrentUser(getUserInfo);\r\n        setCards(getInitialCards);\r\n      })\r\n      .catch(err => console.log(`При загрузке данных с сервера произошла ошибка: ${err}`));\r\n  }, [])\r\n\r\n\r\n  // Открытие попапов\r\n  const handleEditAvatarClick = () => {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n  const handleEditProfileClick = () => {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n  const handleAddPlaceClick = () => {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n  const handleCardDeleteClick = (card) => {\r\n    setIsDeleteCardPopupOpen(card);\r\n  }\r\n  const handleCardClick = (card) => {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  // Закрытие попапов\r\n  const closeAllPopups = () => {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsDeleteCardPopupOpen(false);\r\n    setIsInfoTooltipPopupOpen(false);\r\n    setSelectedCard(null);\r\n  }\r\n  // Закрытие попапа при нажатии Esc\r\n  React.useEffect(() => {\r\n    if (isEditAvatarPopupOpen || isEditProfilePopupOpen || isAddPlacePopupOpen || isDeleteCardPopupOpen || isInfoTooltipPopupOpen || selectedCard) {\r\n      const handleEscClick = (evt) => {\r\n        if (evt.key === 'Escape') {\r\n          closeAllPopups();\r\n        }\r\n      }\r\n      document.addEventListener('keyup', handleEscClick);\r\n\r\n      return () => {\r\n        document.removeEventListener('keyup', handleEscClick);\r\n      }\r\n    }\r\n  }, [isEditAvatarPopupOpen, isEditProfilePopupOpen, isAddPlacePopupOpen, isDeleteCardPopupOpen, isInfoTooltipPopupOpen, selectedCard]);\r\n  // Закрытие попапа при клике на overlay\r\n  const handleOverlayClick = (evt) => {\r\n    if (evt.target.classList.contains('popup')) {\r\n      closeAllPopups();\r\n    }\r\n  }\r\n\r\n\r\n  // Отправка на сервер\r\n  // - данных пользователя\r\n  function handleUpdateUser(userData) {\r\n    setIsLoading(true);\r\n    api.setUserInfo(userData)\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(`При отправке данных пользователя произошла ошибка: ${err}`))\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  // - аватара пользователя\r\n  function handleUpdateAvatar(userData) {\r\n    setIsLoading(true);\r\n    api.setUserAvatar(userData)\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(`При изменении аватара произошла ошибка: ${err}`))\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  // - данных новой карточки\r\n  function handleAddPlaceSubmit(newCard) {\r\n    setIsLoading(true);\r\n    api.setNewCard(newCard)\r\n      .then((res) => {\r\n        if (cards) {\r\n          setCards([res, ...cards]);\r\n          closeAllPopups();\r\n        }\r\n      })\r\n      .catch(err => console.log(`При отправке данных новой карточки произошла ошибка: ${err}`))\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  // - запроса на удаление карточки\r\n  function handleDeleteCardSubmit(card) {\r\n    setIsLoading(true);\r\n    api.deleteCard(card)\r\n      .then(() => {\r\n        setCards((cards) => cards.filter((item) => item._id !== card._id));\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(`При удалении карточки произошла ошибка: ${err}`))\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n\r\n  // Лайк на карточке\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(c => c._id === currentUser._id);\r\n\r\n    api.setLikeCard(card, !isLiked)\r\n      .then((newCard) => {\r\n        setCards((cards) => cards.map((item) => item._id === card._id ? newCard : item));\r\n      })\r\n      .catch(err => console.log(`При постановке/снятии лайк произошла ошибка: ${err}`));\r\n  }\r\n\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className='container'>\r\n\r\n        <Routes>\r\n          {/* Страница авторизации */}\r\n          <Route path='/sign-in' element={\r\n            isLogged ?\r\n              <Navigate to='/'/>\r\n              :\r\n              <>\r\n                <Header link={'/sign-up'} textAuth={'Регистрация'}/>\r\n                <Login onLogin={handleLogin}/>\r\n              </>\r\n          }/>\r\n          {/* Страница регистрации */}\r\n          <Route path='/sign-up' element={\r\n            isLogged ?\r\n              <Navigate to='/'/>\r\n              :\r\n              <>\r\n                <Header link={'/sign-in'} textAuth={'Войти'}/>\r\n                <Register\r\n                  onRegister={handleRegister}\r\n                  isRegistered={isRegistered}\r\n                  isOpen={isInfoTooltipPopupOpen}\r\n                  onClose={closeAllPopups}\r\n                  onPopupClick={handleOverlayClick}\r\n                />\r\n                <InfoTooltip\r\n                  status={isRegistered}\r\n                  isOpen={isInfoTooltipPopupOpen}\r\n                  onClose={closeAllPopups}\r\n                  onPopupClick={handleOverlayClick}\r\n                />\r\n              </>\r\n          }/>\r\n\r\n          {/* Главная страница */}\r\n          <Route path='/' element={\r\n            <>\r\n              <Header\r\n                link={'sign-in'}\r\n                emailUser={isEmailUser}\r\n                textAuth={'Выйти'}\r\n                onSignOut={onSignOut}\r\n                isLogged={isLogged}\r\n              />\r\n              <ProtectedRoute isLogin={isLogged}>\r\n                <Main\r\n                  onEditAvatar={handleEditAvatarClick}\r\n                  onEditProfile={handleEditProfileClick}\r\n                  onAddPlace={handleAddPlaceClick}\r\n                  onCardClick={handleCardClick}\r\n                  onCardLike={handleCardLike}\r\n                  onCardDelete={handleCardDeleteClick}\r\n                  cards={cards}\r\n                />\r\n\r\n                {/* Popup edit user info */}\r\n                <EditProfilePopup\r\n                  isOpen={isEditProfilePopupOpen}\r\n                  isLoading={isLoading}\r\n                  onUpdateUser={handleUpdateUser}\r\n                  onPopupClick={handleOverlayClick}\r\n                  onClose={closeAllPopups}\r\n                />\r\n\r\n                {/* Popup edit user avatar */}\r\n                <EditAvatarPopup\r\n                  isOpen={isEditAvatarPopupOpen}\r\n                  isLoading={isLoading}\r\n                  onUpdateAvatar={handleUpdateAvatar}\r\n                  onPopupClick={handleOverlayClick}\r\n                  onClose={closeAllPopups}\r\n                />\r\n\r\n                {/* Popup add cards */}\r\n                <AddPlacePopup\r\n                  isOpen={isAddPlacePopupOpen}\r\n                  isLoading={isLoading}\r\n                  onAddPlace={handleAddPlaceSubmit}\r\n                  onPopupClick={handleOverlayClick}\r\n                  onClose={closeAllPopups}\r\n                />\r\n\r\n                {/* Popup delete card */}\r\n                <DeleteCardPopup\r\n                  isOpen={isDeleteCardPopupOpen}\r\n                  isLoading={isLoading}\r\n                  onDeleteCard={handleDeleteCardSubmit}\r\n                  onPopupClick={handleOverlayClick}\r\n                  onClose={closeAllPopups}\r\n                />\r\n\r\n                {/* Popup view card */}\r\n                <ImagePopup\r\n                  card={selectedCard}\r\n                  onPopupClick={handleOverlayClick}\r\n                  onClose={closeAllPopups}\r\n                />\r\n              </ProtectedRoute>\r\n            </>\r\n          }/>\r\n        </Routes>\r\n\r\n        <Footer/>\r\n\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename='/react-mesto-auth'>\r\n      <App/>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}