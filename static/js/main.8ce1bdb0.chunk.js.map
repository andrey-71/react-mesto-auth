{"version":3,"sources":["contexts/CurrentUserContext.js","components/ProtectedRoute.js","images/header-logo.svg","components/Header.js","utils/auth.js","components/Login.js","components/InfoTooltip.js","components/Register.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/DeleteCardPopup.js","components/ImagePopup.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["CurrentUserContext","React","createContext","ProtectedRoute","props","isLogin","children","to","Header","className","isLogged","id","type","src","logo","alt","htmlFor","emailUser","link","onClick","onSignOut","textAuth","auth","serverAuthUrl","this","_serverAuthUrl","data","fetch","method","headers","body","JSON","stringify","email","password","then","res","_handleResult","token","ok","json","Promise","reject","status","statusText","Login","navigate","useNavigate","useState","setEmail","setPassword","onSubmit","evt","preventDefault","authorize","localStorage","setItem","onLogin","onEmailUser","catch","err","console","log","name","placeholder","required","onChange","target","value","InfoTooltip","isOpen","onMouseDown","onPopupClick","onClose","Register","isRegistered","setIsRegistered","register","onInfoTooltip","setTimeout","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","like","cardLikeButtonClassName","onCardClick","onCardDelete","onCardLike","Main","onEditAvatar","avatar","about","onEditProfile","onAddPlace","cards","map","length","Footer","PopupWithForm","title","isLoading","textButton","EditProfilePopup","setName","description","setDescription","useEffect","onUpdateUser","minLength","maxLength","EditAvatarPopup","avatarLink","useRef","current","onUpdateAvatar","ref","AddPlacePopup","setLink","DeleteCardPopup","onDeleteCard","ImagePopup","api","options","_serverUrl","serverUrl","_receiveRequestHeaders","receiveRequestHeaders","_sendRequestHeaders","sendRequestHeaders","all","_getUserInfo","_getInitialCards","authorization","App","setCurrentUser","setCards","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isDeleteCardPopupOpen","setIsDeleteCardPopupOpen","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","selectedCard","setSelectedCard","setIsLoading","setIsLogged","isEmailUser","setIsEmailUser","userToken","getItem","checkToken","getAppInfo","getUserInfo","getInitialCards","closeAllPopups","handleEscClick","key","document","addEventListener","removeEventListener","handleOverlayClick","classList","contains","Provider","path","element","removeItem","c","setLikeCard","newCard","item","userData","setUserInfo","finally","setUserAvatar","setNewCard","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ce1bdb0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport {Navigate} from 'react-router-dom';\r\n\r\nconst ProtectedRoute = (props) => {\r\n  {/* Доступ на главную страницу только для авторизованных пользователей */\r\n  }\r\n  return props.isLogin ? props.children : <Navigate to='/sign-in'/>}\r\n\r\nexport default ProtectedRoute;","export default __webpack_public_path__ + \"static/media/header-logo.5f3664ca.svg\";","import {Link} from 'react-router-dom';\r\nimport logo from '../images/header-logo.svg'\r\n\r\n\r\nfunction Header(props) {\r\n\r\n  return (\r\n    <header className='header container__header'>\r\n      {props.isLogged ?\r\n        <div className='header__content header__content_type_login'>\r\n          <input id='header__menu-toggle' className='header__menu-toggle' type='checkbox'/>\r\n          <div className='header__logo-container'>\r\n            <img\r\n              className='header__logo'\r\n              src={logo}\r\n              alt='Логотип Место'\r\n            />\r\n            <label className='header__menu' htmlFor='header__menu-toggle'>\r\n              <span className='header__menu-item'></span>\r\n            </label>\r\n          </div>\r\n          <div className='header__user'>\r\n            <p className='header__user-email'>{props.emailUser}</p>\r\n            <Link\r\n              to={props.link}\r\n              className='header__user-signout'\r\n              onClick={props.onSignOut}\r\n            >\r\n              {props.textAuth}\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        :\r\n        <div className='header__content header__content_type_logout'>\r\n          <img\r\n            className='header__logo'\r\n            src={logo}\r\n            alt='Логотип Место'\r\n          />\r\n          <Link\r\n            to={props.link}\r\n            className='header__link'\r\n            onClick={props.onSignOut}\r\n          >\r\n            {props.textAuth}\r\n          </Link>\r\n        </div>\r\n      }\r\n\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","class Auth {\r\n  constructor(serverAuthUrl) {\r\n    this._serverAuthUrl = serverAuthUrl;\r\n  }\r\n\r\n  // Регистрация пользователя\r\n  register(data) {\r\n    return fetch(`${this._serverAuthUrl}/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        email: data.email,\r\n        password: data.password\r\n      })\r\n    })\r\n      .then(res => this._handleResult(res))\r\n  }\r\n\r\n  // Авторизация пользователя\r\n  authorize(data) {\r\n    return fetch(`${this._serverAuthUrl}/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        email: data.email,\r\n        password: data.password\r\n      })\r\n    })\r\n      .then(res => this._handleResult(res))\r\n  }\r\n\r\n  // Проверка корректности токена, получение email пользователя\r\n  checkToken(token) {\r\n    return fetch(`${this._serverAuthUrl}/users/me`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    })\r\n      .then(res => this._handleResult(res))\r\n  }\r\n\r\n\r\n  // Обработчик результата запроса\r\n  _handleResult(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`\"${res.status} ${res.statusText}\"`);\r\n  }\r\n}\r\n\r\nconst auth = new Auth('https://auth.nomoreparties.co');\r\nexport default auth;","import React from 'react';\r\nimport auth from '../utils/auth';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nfunction Login(props) {\r\n  const navigate = useNavigate();\r\n\r\n  // Стейт-переменные инпутов\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  // Обработчики изменения состояния инпутов\r\n  function handleChangeEmail(evt) {\r\n    setEmail(evt.target.value);\r\n  }\r\n\r\n  function handleChangePassword(evt) {\r\n    setPassword(evt.target.value);\r\n  }\r\n\r\n  // Авторизация пользователя\r\n  function onLogin() {\r\n    auth.authorize({email, password})\r\n      .then((res) => {\r\n        if (res.token) {\r\n          localStorage.setItem('token', res.token);\r\n          props.onLogin();\r\n          props.onEmailUser(email);\r\n          navigate('/');\r\n        }\r\n      })\r\n      .catch(err => console.log(`При авторизации произошла ошибка: ${err}`));\r\n  }\r\n\r\n  // Обработчик формы\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onLogin();\r\n  }\r\n\r\n  return (\r\n    <div className='auth auth_type_login container__auth'>\r\n      <h2 className='auth__title'>Вход</h2>\r\n      <form\r\n        className='auth__form auth__form_type_login'\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <input\r\n          className='auth__input'\r\n          name='emailUser'\r\n          type='email'\r\n          placeholder='Email'\r\n          required\r\n          onChange={handleChangeEmail}\r\n        />\r\n        <input\r\n          className='auth__input'\r\n          name='passwordUser'\r\n          type='password'\r\n          placeholder='Пароль'\r\n          required\r\n          onChange={handleChangePassword}\r\n        />\r\n        <button className='auth__submit-button' type='submit'>Войти</button>\r\n      </form>\r\n      <div className='auth__sign-up'></div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nfunction InfoTooltip(props) {\r\n\r\n  return (\r\n    <div className={`popup ${props.isOpen ? 'popup_active' : ''} popup_type_info-tooltip`}\r\n         onMouseDown={props.onPopupClick}\r\n    >\r\n      <div className='popup__container'>\r\n        <div\r\n          className={`popup__image popup__image_type_${props.status ? 'success' : 'error'}`}\r\n        ></div>\r\n        <p className='popup__status-text'>\r\n          {props.status\r\n            ?\r\n            'Вы успешно зарегистрировались!'\r\n            :\r\n            'Что-то пошло не так! Попробуйте ещё раз.'\r\n          }\r\n        </p>\r\n        <button\r\n          className='popup__close'\r\n          type='button'\r\n          onClick={props.onClose}\r\n        />\r\n      </div>\r\n\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default InfoTooltip;","import React from 'react';\r\nimport auth from '../utils/auth';\r\nimport {Link, useNavigate} from 'react-router-dom';\r\nimport InfoTooltip from './InfoTooltip';\r\n\r\n\r\nfunction Register(props) {\r\n  const navigate = useNavigate();\r\n\r\n  // Стейт-переменные\r\n  // - инпутов\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  // - регистрации\r\n  const [isRegistered, setIsRegistered] = React.useState(false);\r\n\r\n  // Обработчики изменения состояния инпутов\r\n  function handleChangeEmail(evt) {\r\n    setEmail(evt.target.value);\r\n  }\r\n\r\n  function handleChangePassword(evt) {\r\n    setPassword(evt.target.value);\r\n  }\r\n\r\n  // Регистрация пользователя\r\n  function onRegister() {\r\n    auth.register({email, password})\r\n      .then(() => {\r\n        setIsRegistered(true);\r\n        props.onInfoTooltip();\r\n        setTimeout(() => {\r\n          navigate('/sign-in');\r\n        }, 2000)\r\n      })\r\n      .catch((err) => {\r\n        setIsRegistered(false);\r\n        props.onInfoTooltip();\r\n        console.log(`При регистрации произошла ошибка: ${err}`);\r\n      })\r\n  }\r\n\r\n  // Обработчик формы\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onRegister();\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='auth auth_type_registr container__auth'>\r\n        <h2 className='auth__title'>Регистрация</h2>\r\n        <form\r\n          className='auth__form auth__form_type_registr'\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <input\r\n            className='auth__input'\r\n            name='emailUser'\r\n            type='email'\r\n            placeholder='Email'\r\n            required\r\n            onChange={handleChangeEmail}\r\n          />\r\n          <input\r\n            className='auth__input'\r\n            name='passwordUser'\r\n            type='password'\r\n            placeholder='Пароль'\r\n            required\r\n            onChange={handleChangePassword}\r\n          />\r\n          <button className='auth__submit-button' type='submit'>Зарегистрироваться</button>\r\n        </form>\r\n        <div className='auth__sign-in'>\r\n          <p className='auth__registration-request-text'>Уже зарегистрированы?</p>\r\n          <Link to='/sign-in' className='auth__login-link'>Войти</Link>\r\n        </div>\r\n      </div>\r\n      <InfoTooltip\r\n        isOpen={props.isOpen}\r\n        onClose={props.onClose}\r\n        onPopupClick={props.onPopupClick}\r\n        status={isRegistered}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n  // Подписка на контекст данных пользователя\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // Отрисовка кнопки удаления карточки, если карточка создана пользователем\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n  const cardDeleteButtonClassName = (\r\n    `card__delete-button ${isOwn ? 'card__delete-button_visible' : 'card__delete-button_hidden'}`\r\n  );\r\n  // Отрисовка лайка на карточке, поставленного пользователем\r\n  const isLiked = props.card.likes.some(like => like._id === currentUser._id);\r\n  const cardLikeButtonClassName = `card__like${isLiked ? ' card__like_active' : ''}`;\r\n\r\n\r\n  return (\r\n    <figure className='card'>\r\n      <img\r\n        src={props.link}\r\n        alt={props.name}\r\n        className='card__image'\r\n        onClick={\r\n          function handleClick() {\r\n            props.onCardClick(props.card)\r\n          }\r\n        }\r\n      />\r\n      <button\r\n        className={cardDeleteButtonClassName}\r\n        type='button'\r\n        onClick={\r\n          function handleDelete() {\r\n            props.onCardDelete(props.card);\r\n          }\r\n        }\r\n      />\r\n      <figcaption className='card__info'>\r\n        <h2 className='card__caption'>{props.name}</h2>\r\n        <div className='card__like-section'>\r\n          <button\r\n            className={cardLikeButtonClassName}\r\n            type='button'\r\n            onClick={\r\n              function handleLikeClick() {\r\n                props.onCardLike(props.card)\r\n              }\r\n            }\r\n          />\r\n          <p className='card__like-number'>{props.likes}</p>\r\n        </div>\r\n      </figcaption>\r\n    </figure>\r\n  )\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\nimport Card from './Card';\r\n\r\n\r\nfunction Main(props) {\r\n  // Подписка на контекст данных пользователя\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n\r\n  return (\r\n    <main className='content container__content'>\r\n      {/* Profile */}\r\n      <section className='profile'>\r\n        <div className='profile__user-data'>\r\n          <button className='profile__edit-avatar' type='button' onClick={props.onEditAvatar}>\r\n            <img\r\n              src={currentUser.avatar}\r\n              alt='Фотография пользователя'\r\n              className='profile__avatar'\r\n            />\r\n          </button>\r\n          <div className='profile__info'>\r\n            <h1 className='profile__name'>{currentUser.name}</h1>\r\n            <p className='profile__job'>{currentUser.about}</p>\r\n            <button\r\n              className='profile__edit-button'\r\n              type='button'\r\n              onClick={props.onEditProfile}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button\r\n          className='profile__add-button'\r\n          type='button'\r\n          onClick={props.onAddPlace}\r\n        />\r\n      </section>\r\n      {/* Photo gallery */}\r\n      <section className='card-gallery content__card-gallery'>\r\n        {props.cards.map((card) => (\r\n          <Card\r\n            card={card}\r\n            name={card.name}\r\n            link={card.link}\r\n            likes={card.likes.length}\r\n            onCardClick={props.onCardClick}\r\n            onCardLike={props.onCardLike}\r\n            onCardDelete={props.onCardDelete}\r\n            key={card._id}\r\n          />\r\n        ))}\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className='footer container__footer'>\r\n      <h2 className='footer__copyright'>&copy; 2021 Mesto Russia</h2>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n\r\n  return (\r\n    <div className={`popup ${props.isOpen ? 'popup_active' : ''} popup_type_${props.name}`}\r\n         onMouseDown={props.onPopupClick}\r\n    >\r\n      <div className='popup__container'>\r\n        <h2 className='popup__title'>{props.title}</h2>\r\n        <form\r\n          className={`popup__form popup__form_type_${props.name}`}\r\n          name={`form-${props.name}`}\r\n          onSubmit={props.onSubmit}\r\n        >\r\n          {props.children}\r\n          <button className='popup__submit-button' type='submit'>\r\n            {props.isLoading ? 'Сохранение...' : props.textButton}\r\n          </button>\r\n        </form>\r\n        <button\r\n          className='popup__close'\r\n          type='button'\r\n          onClick={props.onClose}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditProfilePopup(props) {\r\n  // Подписка на контекст данных пользователя\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // Стейт-переменные:\r\n  // - инпут с именем пользователя\r\n  const [name, setName] = React.useState('');\r\n  // - инпут с информацией о пользователе\r\n  const [description, setDescription] = React.useState('');\r\n\r\n  // Запись и очистка данных пользователя в инпуты при открытии и закрытии попапа соответственно\r\n  React.useEffect(() => {\r\n    if (props.isOpen) {\r\n      setName(currentUser.name);\r\n      setDescription(currentUser.about);\r\n    } else {\r\n      setName('');\r\n      setDescription('');\r\n    }\r\n  }, [props.isOpen, currentUser]);\r\n\r\n  // Обработчики изменения инпутов\r\n  function handleChangeName(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleChangeDescription(evt) {\r\n    setDescription(evt.target.value);\r\n  }\r\n\r\n  // Обработчик формы\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onUpdateUser({\r\n      name,\r\n      about: description\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='edit-profile'\r\n      title='Редактировать профиль'\r\n      textButton='Сохранить'\r\n      isOpen={props.isOpen}\r\n      isLoading={props.isLoading}\r\n      onSubmit={handleSubmit}\r\n      onPopupClick={props.onPopupClick}\r\n      onClose={props.onClose}\r\n    >\r\n      <label className='popup__input-element'>\r\n        <input\r\n          type='text'\r\n          placeholder='Ваше имя'\r\n          className='popup__input popup__input_type_profile-name'\r\n          id='input-profile-name'\r\n          name='nameUser'\r\n          value={name}\r\n          onChange={handleChangeName}\r\n          required\r\n          minLength={2}\r\n          maxLength={40}\r\n        />\r\n        <span className='popup__input-error' id='input-profile-name-error'/>\r\n      </label>\r\n      <label className='popup__input-element'>\r\n        <input\r\n          type='text'\r\n          placeholder='Чем занимаетесь'\r\n          className='popup__input popup__input_type_profile-job'\r\n          id='input-profile-job'\r\n          name='infoUser'\r\n          value={description}\r\n          onChange={handleChangeDescription}\r\n          required\r\n          minLength={2}\r\n          maxLength={200}\r\n        />\r\n        <span className='popup__input-error' id='input-profile-job-error'/>\r\n      </label>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n  // Реф ссылки на картинку\r\n  const avatarLink = React.useRef('');\r\n\r\n  // Обработчик формы\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onUpdateAvatar({\r\n      avatar: avatarLink.current.value\r\n    });\r\n  }\r\n\r\n  // Очистка поля ввода при закрытии попапа\r\n  React.useEffect(() => {\r\n    if (!props.isOpen) {\r\n      avatarLink.current.value = '';\r\n    }\r\n  }, [props.isOpen]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='edit-avatar'\r\n      title='Обновить аватар'\r\n      textButton='Сохранить'\r\n      isOpen={props.isOpen}\r\n      isLoading={props.isLoading}\r\n      onSubmit={handleSubmit}\r\n      onPopupClick={props.onPopupClick}\r\n      onClose={props.onClose}\r\n    >\r\n      <label className='popup__input-element'>\r\n        <input\r\n          type='url'\r\n          placeholder='Ссылка на картинку'\r\n          className='popup__input popup__input_type_avatar-link'\r\n          id='input-avatar-link'\r\n          name='avatarUser'\r\n          ref={avatarLink}\r\n          required\r\n        />\r\n        <span className='popup__input-error' id='input-avatar-link-error'/>\r\n      </label>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;","import {useState, useEffect} from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n  // Стейт-переменные:\r\n  // - инпут с подписью карточки\r\n  const [name, setName] = useState('');\r\n  // - инпут с ссылкой карточки\r\n  const [link, setLink] = useState('');\r\n\r\n  // Обработчики изменения инпутов\r\n  function handleChangeName(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleChangeLink(evt) {\r\n    setLink(evt.target.value);\r\n  }\r\n\r\n  // Обработчик формы\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onAddPlace({name, link});\r\n  }\r\n\r\n  // Очистка полей ввода при закрытии попапа\r\n  useEffect(() => {\r\n    if (!props.isOpen) {\r\n      setName('');\r\n      setLink('');\r\n    }\r\n  }, [props.isOpen]);\r\n\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='add-card'\r\n      title='Новое место'\r\n      textButton='Создать'\r\n      isOpen={props.isOpen}\r\n      isLoading={props.isLoading}\r\n      onSubmit={handleSubmit}\r\n      onPopupClick={props.onPopupClick}\r\n      onClose={props.onClose}\r\n    >\r\n      <label className='popup__input-element'>\r\n        <input\r\n          type='text'\r\n          placeholder='Название'\r\n          className='popup__input popup__input_type_card-name'\r\n          id='input-card-name'\r\n          name='name'\r\n          value={name}\r\n          onChange={handleChangeName}\r\n          required\r\n          minLength={2}\r\n          maxLength={30}\r\n        />\r\n        <span className='popup__input-error' id='input-card-name-error'/>\r\n      </label>\r\n      <label className='popup__input-element'>\r\n        <input\r\n          type='url'\r\n          placeholder='Ссылка на картинку'\r\n          className='popup__input popup__input_type_card-link'\r\n          id='input-card-link'\r\n          name='link'\r\n          value={link}\r\n          onChange={handleChangeLink}\r\n          required\r\n        />\r\n        <span className='popup__input-error' id='input-card-link-error'/>\r\n      </label>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction DeleteCardPopup(props) {\r\n  // Обработчик формы\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onDeleteCard(props.isOpen);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='delete-card'\r\n      title='Вы уверены?'\r\n      textButton='Да'\r\n      isOpen={props.isOpen}\r\n      isLoading={props.isLoading}\r\n      onSubmit={handleSubmit}\r\n      onPopupClick={props.onPopupClick}\r\n      onClose={props.onClose}\r\n    />\r\n  )\r\n}\r\n\r\nexport default DeleteCardPopup;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <div className={`popup ${props.card ? 'popup_active' : ''} popup_type_card-view`} onClick={props.onPopupClick}>\r\n      <div className='popup__card-view-container'>\r\n        <img src={props.card ? props.card.link : ''} alt={props.card ? props.card.name : ''}\r\n             className='popup__card-view-photo'/>\r\n        <p className='popup__card-view-caption'>{props.card ? props.card.name : ''}</p>\r\n        <button\r\n          className='popup__close'\r\n          type='button'\r\n          onClick={props.onClose}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImagePopup;","class Api {\r\n  constructor(options) {\r\n    this._serverUrl = options.serverUrl;\r\n    this._receiveRequestHeaders = options.receiveRequestHeaders\r\n    this._sendRequestHeaders = options.sendRequestHeaders;\r\n  }\r\n\r\n  // Общий запрос всех данных с сервера\r\n  getAppInfo() {\r\n    return Promise.all([this._getUserInfo(), this._getInitialCards()]);\r\n  }\r\n\r\n  // Получение данных пользователя\r\n  _getUserInfo() {\r\n    return fetch(`${this._serverUrl}/users/me`, {\r\n      headers: this._receiveRequestHeaders\r\n    })\r\n      .then(res => this._handleResult(res));\r\n  }\r\n\r\n  // Получение начальных карточек\r\n  _getInitialCards() {\r\n    return fetch(`${this._serverUrl}/cards`, {\r\n      headers: this._receiveRequestHeaders\r\n    })\r\n      .then(res => this._handleResult(res));\r\n  }\r\n\r\n  // Отправка данных пользователя\r\n  setUserInfo(data) {\r\n    return fetch(`${this._serverUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._sendRequestHeaders,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about\r\n      })\r\n    })\r\n      .then(res => this._handleResult(res));\r\n  }\r\n\r\n  // Отправка аватара пользователя\r\n  setUserAvatar(data) {\r\n    return fetch(`${this._serverUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._sendRequestHeaders,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar\r\n      })\r\n    })\r\n      .then(res => this._handleResult(res));\r\n  }\r\n\r\n  // Отправка новой карточки\r\n  setNewCard(data) {\r\n    return fetch(`${this._serverUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this._sendRequestHeaders,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    })\r\n      .then(res => this._handleResult(res));\r\n  }\r\n\r\n  // Удаление карточки\r\n  deleteCard(data) {\r\n    return fetch(`${this._serverUrl}/cards/${data._id}`, {\r\n      method: 'DELETE',\r\n      headers: this._receiveRequestHeaders\r\n    })\r\n      .then(res => this._handleResult(res));\r\n  }\r\n\r\n  // Установка/снятие лайка\r\n  setLikeCard(card, isLiked) {\r\n    if (isLiked) {\r\n      return fetch(`${this._serverUrl}/cards/likes/${card._id}`, {\r\n        method: 'PUT',\r\n        headers: this._sendRequestHeaders\r\n      })\r\n        .then(res => this._handleResult(res));\r\n    } else {\r\n      return fetch(`${this._serverUrl}/cards/likes/${card._id}`, {\r\n        method: 'DELETE',\r\n        headers: this._receiveRequestHeaders\r\n      })\r\n        .then(res => this._handleResult(res));\r\n    }\r\n  }\r\n\r\n\r\n  // Обработчик результата запроса\r\n  _handleResult(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`\"${res.status} ${res.statusText}\"`);\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  serverUrl: 'https://mesto.nomoreparties.co/v1/cohort-29',\r\n  receiveRequestHeaders: {\r\n    authorization: '47bf35c3-c8a1-495a-9dd2-8537c372d068'\r\n  },\r\n  sendRequestHeaders: {\r\n    authorization: '47bf35c3-c8a1-495a-9dd2-8537c372d068',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api;","import React from 'react';\r\nimport {Routes, Route, Navigate, useNavigate} from 'react-router-dom';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport Header from './Header';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport DeleteCardPopup from './DeleteCardPopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport auth from '../utils/auth';\r\nimport api from '../utils/api';\r\n\r\n\r\nfunction App() {\r\n  // Стейт-переменные:\r\n  // - данных пользователя\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  // - карточек\r\n  const [cards, setCards] = React.useState([]);\r\n  // - попапов\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = React.useState(false);\r\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState(null);\r\n  // - процесса загрузки данных на сервер\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  // - авторизации\r\n  const [isLogged, setIsLogged] = React.useState(false);\r\n  // - email пользователя\r\n  const [isEmailUser, setIsEmailUser] = React.useState('');\r\n\r\n  // Авторизация пользователя\r\n  function handleLogin() {\r\n    setIsLogged(true);\r\n  }\r\n\r\n  // Запись email пользователя\r\n  function handleEmailUser(email) {\r\n    setIsEmailUser(email);\r\n  }\r\n\r\n  // Проверка наличия сохраненных данных пользователя и автоматическая авторизация\r\n  React.useEffect(() => {\r\n    const userToken = localStorage.getItem('token');\r\n    if (userToken) {\r\n      auth.checkToken(userToken)\r\n        .then((res) => {\r\n          if (res) {\r\n            setIsLogged(true);\r\n            setIsEmailUser(res.data.email);\r\n          }\r\n        })\r\n        .catch(err => console.log(`Токен не найден: ${err}`))\r\n    }\r\n  }, [])\r\n\r\n  // Выход из учетной записи\r\n  function onSignOut() {\r\n    localStorage.removeItem('token');\r\n    setIsLogged(false);\r\n  }\r\n\r\n\r\n  // Получение карточек и данных пользователя, отрисовка на странице\r\n  React.useEffect(() => {\r\n    api.getAppInfo()\r\n      .then(([getUserInfo, getInitialCards]) => {\r\n        setCurrentUser(getUserInfo);\r\n        setCards(getInitialCards);\r\n      })\r\n      .catch(err => console.log(`При загрузке данных с сервера произошла ошибка: ${err}`));\r\n  }, [])\r\n\r\n\r\n  // Открытие попапов\r\n  const handleEditAvatarClick = () => {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n  const handleEditProfileClick = () => {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n  const handleAddPlaceClick = () => {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n  const handleCardDeleteClick = (card) => {\r\n    setIsDeleteCardPopupOpen(card);\r\n  }\r\n  const handleInfoTooltipClick = () => {\r\n    setIsInfoTooltipPopupOpen(true);\r\n  }\r\n  const handleCardClick = (card) => {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  // Закрытие попапов\r\n  const closeAllPopups = () => {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsDeleteCardPopupOpen(false);\r\n    setIsInfoTooltipPopupOpen(false);\r\n    setSelectedCard(null);\r\n  }\r\n  // Закрытие попапа при нажатии Esc\r\n  React.useEffect(() => {\r\n    if (isEditAvatarPopupOpen || isEditProfilePopupOpen || isAddPlacePopupOpen || isDeleteCardPopupOpen || isInfoTooltipPopupOpen || selectedCard) {\r\n      const handleEscClick = (evt) => {\r\n        if (evt.key === 'Escape') {\r\n          closeAllPopups();\r\n        }\r\n      }\r\n      document.addEventListener('keyup', handleEscClick);\r\n\r\n      return () => {\r\n        document.removeEventListener('keyup', handleEscClick);\r\n      }\r\n    }\r\n  }, [isEditAvatarPopupOpen, isEditProfilePopupOpen, isAddPlacePopupOpen, isDeleteCardPopupOpen, isInfoTooltipPopupOpen, selectedCard]);\r\n  // Закрытие попапа при клике на overlay\r\n  const handleOverlayClick = (evt) => {\r\n    if (evt.target.classList.contains('popup')) {\r\n      closeAllPopups();\r\n    }\r\n  }\r\n\r\n\r\n  // Отправка на сервер\r\n  // - данных пользователя\r\n  function handleUpdateUser(userData) {\r\n    setIsLoading(true);\r\n    api.setUserInfo(userData)\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(`При отправке данных пользователя произошла ошибка: ${err}`))\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  // - аватара пользователя\r\n  function handleUpdateAvatar(userData) {\r\n    setIsLoading(true);\r\n    api.setUserAvatar(userData)\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(`При изменении аватара произошла ошибка: ${err}`))\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  // - данных новой карточки\r\n  function handleAddPlaceSubmit(newCard) {\r\n    setIsLoading(true);\r\n    api.setNewCard(newCard)\r\n      .then((res) => {\r\n        if (cards) {\r\n          setCards([res, ...cards]);\r\n          closeAllPopups();\r\n        }\r\n      })\r\n      .catch(err => console.log(`При отправке данных новой карточки произошла ошибка: ${err}`))\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  // - запроса на удаление карточки\r\n  function handleDeleteCardSubmit(card) {\r\n    setIsLoading(true);\r\n    api.deleteCard(card)\r\n      .then(() => {\r\n        setCards((cards) => cards.filter((item) => item._id !== card._id));\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(`При удалении карточки произошла ошибка: ${err}`))\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n\r\n  // Лайк на карточке\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(c => c._id === currentUser._id);\r\n\r\n    api.setLikeCard(card, !isLiked)\r\n      .then((newCard) => {\r\n        setCards((cards) => cards.map((item) => item._id === card._id ? newCard : item));\r\n      })\r\n      .catch(err => console.log(`При постановке/снятии лайк произошла ошибка: ${err}`));\r\n  }\r\n\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className='container'>\r\n\r\n        <Routes>\r\n          {/* Страница авторизации */}\r\n          <Route path='/sign-in' element={\r\n            isLogged ?\r\n              <Navigate to='/'/>\r\n              :\r\n              <>\r\n                <Header link={'/sign-up'} textAuth={'Регистрация'}/>\r\n                <Login\r\n                  onLogin={handleLogin}\r\n                  onEmailUser={handleEmailUser}\r\n                />\r\n              </>\r\n          }/>\r\n          {/* Страница регистрации */}\r\n          <Route path='/sign-up' element={\r\n            isLogged ?\r\n              <Navigate to='/'/>\r\n              :\r\n              <>\r\n                <Header link={'/sign-in'} textAuth={'Войти'}/>\r\n                <Register\r\n                  onInfoTooltip={handleInfoTooltipClick}\r\n                  isOpen={isInfoTooltipPopupOpen}\r\n                  onClose={closeAllPopups}\r\n                  onPopupClick={handleOverlayClick}\r\n                />\r\n              </>\r\n          }/>\r\n\r\n          {/* Главная страница */}\r\n          <Route path='/' element={\r\n            <>\r\n              <Header\r\n                link={'sign-in'}\r\n                emailUser={isEmailUser}\r\n                textAuth={'Выйти'}\r\n                onSignOut={onSignOut}\r\n                isLogged={isLogged}\r\n              />\r\n              <ProtectedRoute isLogin={isLogged}>\r\n                <Main\r\n                  onEditAvatar={handleEditAvatarClick}\r\n                  onEditProfile={handleEditProfileClick}\r\n                  onAddPlace={handleAddPlaceClick}\r\n                  onCardClick={handleCardClick}\r\n                  onCardLike={handleCardLike}\r\n                  onCardDelete={handleCardDeleteClick}\r\n                  cards={cards}\r\n                />\r\n\r\n                {/* Popup edit user info */}\r\n                <EditProfilePopup\r\n                  isOpen={isEditProfilePopupOpen}\r\n                  isLoading={isLoading}\r\n                  onUpdateUser={handleUpdateUser}\r\n                  onPopupClick={handleOverlayClick}\r\n                  onClose={closeAllPopups}\r\n                />\r\n\r\n                {/* Popup edit user avatar */}\r\n                <EditAvatarPopup\r\n                  isOpen={isEditAvatarPopupOpen}\r\n                  isLoading={isLoading}\r\n                  onUpdateAvatar={handleUpdateAvatar}\r\n                  onPopupClick={handleOverlayClick}\r\n                  onClose={closeAllPopups}\r\n                />\r\n\r\n                {/* Popup add cards */}\r\n                <AddPlacePopup\r\n                  isOpen={isAddPlacePopupOpen}\r\n                  isLoading={isLoading}\r\n                  onAddPlace={handleAddPlaceSubmit}\r\n                  onPopupClick={handleOverlayClick}\r\n                  onClose={closeAllPopups}\r\n                />\r\n\r\n                {/* Popup delete card */}\r\n                <DeleteCardPopup\r\n                  isOpen={isDeleteCardPopupOpen}\r\n                  isLoading={isLoading}\r\n                  onDeleteCard={handleDeleteCardSubmit}\r\n                  onPopupClick={handleOverlayClick}\r\n                  onClose={closeAllPopups}\r\n                />\r\n\r\n                {/* Popup view card */}\r\n                <ImagePopup\r\n                  card={selectedCard}\r\n                  onPopupClick={handleOverlayClick}\r\n                  onClose={closeAllPopups}\r\n                />\r\n              </ProtectedRoute>\r\n            </>\r\n          }/>\r\n        </Routes>\r\n\r\n        <Footer/>\r\n\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App/>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}